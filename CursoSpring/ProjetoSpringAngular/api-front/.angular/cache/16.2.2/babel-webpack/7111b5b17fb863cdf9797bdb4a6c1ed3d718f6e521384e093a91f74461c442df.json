{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Cliente } from '../modelo/Cliente';\nexport let PrincipalComponent = class PrincipalComponent {\n  constructor(servico) {\n    this.servico = servico;\n    this.btnCadastro = true;\n    this.tabela = true;\n    this.cliente = new Cliente();\n    //Json de cliente\n    this.clientes = [];\n  }\n  //metodo de selecao total\n  selecionar() {\n    this.servico.selecionar().subscribe(retorno => this.clientes = retorno);\n  }\n  //metodo de cadastro\n  cadastrar() {\n    this.servico.cadastrar(this.cliente).subscribe(retorno => {\n      this.clientes.push(retorno);\n      //limpar formulario\n      this.cliente = new Cliente();\n      alert(`Cliente Cadastrado com Sucesso!`);\n    });\n  }\n  //metodo de cadastro\n  editar() {\n    this.servico.editar(this.cliente).subscribe(retorno => {\n      this.clientes.push(retorno);\n      //limpar formulario\n      this.cliente = new Cliente();\n      alert(`Cliente Alterado com Sucesso!`);\n    });\n  }\n  //metodo para selectao de cliente\n  selecionarCliente(posicao) {\n    this.cliente = this.clientes[posicao];\n    this.btnCadastro = false;\n    this.tabela = false;\n  }\n  cancelar() {\n    this.btnCadastro = true;\n    this.tabela = true;\n  }\n  //metodo de inicializacao\n  ngOnInit() {\n    this.selecionar();\n  }\n};\nPrincipalComponent = __decorate([Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.css']\n})], PrincipalComponent);","map":{"version":3,"names":["Component","Cliente","PrincipalComponent","constructor","servico","btnCadastro","tabela","cliente","clientes","selecionar","subscribe","retorno","cadastrar","push","alert","editar","selecionarCliente","posicao","cancelar","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Giovani\\Cursos\\CursoSpring\\ProjetoSpringAngular\\api-front\\src\\app\\principal\\principal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from '../modelo/Cliente';\nimport { ClienteService } from '../servico/cliente.service';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.css']\n})\nexport class PrincipalComponent {\n\n    btnCadastro:boolean = true;\n\n    tabela:boolean = true;\n\n    cliente = new Cliente();\n\n    //Json de cliente\n    clientes:Cliente[] = [];\n\n    constructor(private servico:ClienteService){}\n\n    //metodo de selecao total\n    selecionar():void{\n      this.servico.selecionar().subscribe(retorno => this.clientes = retorno)\n    }\n\n    //metodo de cadastro\n    cadastrar():void{\n      this.servico.cadastrar(this.cliente).subscribe(retorno => {\n        this.clientes.push(retorno);\n        //limpar formulario\n        this.cliente = new Cliente();\n        alert(`Cliente Cadastrado com Sucesso!`)\n\n      });\n    }\n\n    //metodo de cadastro\n    editar():void{\n      this.servico.editar(this.cliente).subscribe(retorno => {\n        this.clientes.push(retorno);\n        //limpar formulario\n        this.cliente = new Cliente();\n        alert(`Cliente Alterado com Sucesso!`)\n\n      });\n    }\n    \n    //metodo para selectao de cliente\n    selecionarCliente(posicao:number):void{\n      this.cliente = this.clientes[posicao];\n\n      this.btnCadastro = false;\n      this.tabela = false;\n\n    }\n\n    cancelar():void{\n      this.btnCadastro = true;\n      this.tabela = true;\n\n    }\n\n    //metodo de inicializacao\n    ngOnInit(){\n      this.selecionar();\n    }\n    \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,mBAAmB;AAQpC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAW3BC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAT3B,KAAAC,WAAW,GAAW,IAAI;IAE1B,KAAAC,MAAM,GAAW,IAAI;IAErB,KAAAC,OAAO,GAAG,IAAIN,OAAO,EAAE;IAEvB;IACA,KAAAO,QAAQ,GAAa,EAAE;EAEqB;EAE5C;EACAC,UAAUA,CAAA;IACR,IAAI,CAACL,OAAO,CAACK,UAAU,EAAE,CAACC,SAAS,CAACC,OAAO,IAAI,IAAI,CAACH,QAAQ,GAAGG,OAAO,CAAC;EACzE;EAEA;EACAC,SAASA,CAAA;IACP,IAAI,CAACR,OAAO,CAACQ,SAAS,CAAC,IAAI,CAACL,OAAO,CAAC,CAACG,SAAS,CAACC,OAAO,IAAG;MACvD,IAAI,CAACH,QAAQ,CAACK,IAAI,CAACF,OAAO,CAAC;MAC3B;MACA,IAAI,CAACJ,OAAO,GAAG,IAAIN,OAAO,EAAE;MAC5Ba,KAAK,CAAC,iCAAiC,CAAC;IAE1C,CAAC,CAAC;EACJ;EAEA;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACX,OAAO,CAACW,MAAM,CAAC,IAAI,CAACR,OAAO,CAAC,CAACG,SAAS,CAACC,OAAO,IAAG;MACpD,IAAI,CAACH,QAAQ,CAACK,IAAI,CAACF,OAAO,CAAC;MAC3B;MACA,IAAI,CAACJ,OAAO,GAAG,IAAIN,OAAO,EAAE;MAC5Ba,KAAK,CAAC,+BAA+B,CAAC;IAExC,CAAC,CAAC;EACJ;EAEA;EACAE,iBAAiBA,CAACC,OAAc;IAC9B,IAAI,CAACV,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACS,OAAO,CAAC;IAErC,IAAI,CAACZ,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,MAAM,GAAG,KAAK;EAErB;EAEAY,QAAQA,CAAA;IACN,IAAI,CAACb,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,MAAM,GAAG,IAAI;EAEpB;EAEA;EACAa,QAAQA,CAAA;IACN,IAAI,CAACV,UAAU,EAAE;EACnB;CAGH;AA7DYP,kBAAkB,GAAAkB,UAAA,EAL9BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWrB,kBAAkB,CA6D9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}